---
title: "In Class Exercise 9"
subtitle: ""
date: "13 Mar 2023"
date-modified: "`r Sys.Date()`"
number-sections: true
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

# Setting Up

## Installing Packages

```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, rsample)
```

## Importing Data

### MPSZ Dataset (Geospatial)

```{r}
mpsz <- st_read(
  dsn = "data/geospatial",
  layer = "MP14_SUBZONE_WEB_PL"
)
```

### RDS Data File (Aspatial)

```{r}
mdata <- read_rds("data/aspatial/mdata.rds")
```

## Data Wrangling

### Splitting Training and Testing Data

```{r}
set.seed(1234)
resale_split <- initial_split(mdata, prop = 6.5/10)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

### Creating a MLR Model

```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data = train_data)
summary(price_mlr)
```

Store this model as a RDS file

```{r}
write_rds(price_mlr, "data/model/price_slr.rds")
```

# GWR Predictive Method

```{r}
train_data_sp <- as_Spatial(train_data)
train_data_sp
```

There is no need for st_transform because the projections are correct already.

## Preparing Coordinates Data

coords data can not be in list format.

```{r}
coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
#| eval: false
coords_train <- write_rds(coords_train, "data/model/coords_train.rds")
coords_test <- write_rds(coords_test, "data/model/coords_test.rds")
```

## Dropping Geometry Field

```{r}
train_data <- train_data %>%
  st_drop_geometry()
```

## Calibrating Random Forest

```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data = train_data)
```

```{r}
print(rf)
```

MSE needs to be square root to compare with other models.

```{r}
#| eval: false 
set.seed(1234)
gwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL +
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  dframe = train_data,
                  bw = 55,
                  kernel = "adaptive",
                  coords = coords_train)
```

Need to know how to calculate the bandwidth!

```{r}
#| eval: false
gwRF_adaptive <- write_rds(gwRF_adaptive, "data/model/gwRF_adaptive.rds")
```

## Preparing Test Data

```{r}
test_data <- cbind(test_data, coords_test) %>%
  st_drop_geometry()
```
