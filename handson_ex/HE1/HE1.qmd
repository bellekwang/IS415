---
title: "Hands-on Exercise 1: Geospatial Wrangling with R"
date: "2 Feb 2023"
date-modified: "`r Sys.Date()`"
number-sections: true
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

## Getting Started

### Installing and Loading Packages

```{r}
pacman::p_load(sf, tidyverse)
```

## Geospatial Data

### Importing Geospatial Data

There are 3 geospatial data-sets to import: MP14_SUBZONE_WEB_PL, CyclingPath and PreSchool respectively:

#### MP14_SUBZONE_WEB_PL: Importing Polygon (MULTIPOLYGON) Feature Data Frame

-   `dsn`: define data path

-   `layer`: shapefile name (accepts all extensions - .shp, .dbf, .prj, .shx)

```{r}
mpsz = st_read(
  dsn = "data/geospatial/mpsz",
  layer = "MP14_SUBZONE_WEB_PL"
)
```

#### CyclingPath: Importing Polyline (MULTILINESTRING) Feature Data

```{r}
cyclingpath = st_read(
  dsn = "data/geospatial/cyclingpath",
  layer = "CyclingPathGazette"
)
```

#### PreSchool: Importing KML Files

```{r}
preschool = st_read("data/geospatial/preschools-location.kml")
```

### Understanding sf Data Frame

#### `st_geometry(sf)`

Displays number of features, geometry type, projected CRS (coordinate system) and the first 5 geometries.

```{r}
st_geometry(mpsz)
```

#### `glimpse(sf)`

Displays an overview of all the columns.

```{r}
glimpse(mpsz)
```

#### `head(sf, n=y)`

Displays all information of the first n features of the data frame.

```{r}
head(mpsz, n=5)
```

## Plotting Geospatial Data

### `plot(sf)`

> The `plot()` function is a simple way to plot the data. For better quality plots, tmap should be used.

Default plot: multi-plot of all attributes

```{r}
plot(mpsz)
```

#### Plotting only the Geometry

```{r}
plot(st_geometry(mpsz))
```

#### Plotting Specific Attributes

```{r}
plot(mpsz["PLN_AREA_N"])
```

## Projection

### Assigning EPSG Code to sf Data Frame

#### Checking CRS of sf Data Frame

```{r}
st_crs(mpsz)
```

The EPSG is 9001 when svy21 should be 3414.

#### Assigning the Correct EPSG Code

```{r}
mpsz3414 <- st_set_crs(mpsz, 3414)
st_crs(mpsz3414)
```

### Transforming Projections

```{r}
preschool3414 <- st_transform(
  preschool, crs = 3414
)
head(preschool3414, n=5)
```

## Aspatial Data

### Importing Data

```{r}
listings <- read_csv("data/aspatial/listings.csv")
```

### Understanding the Data

`list()` instead of `glimpse()`

```{r}
list(listings)
```

### Creating sf Data Frame

```{r}
listings_sf <- st_as_sf(
  listings,
  coords = c("longitude", "latitude"),
  crs = 4326
) %>%
  st_transform(crs = 3414)
```

```{r}
glimpse(listings_sf)
```

## Geoprocessing

> **Scenario:** The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.

1.  Compute 5-meter buffers around cycling paths
2.  Calculate the are of buffers
3.  Calculate the sum of total land involved

```{r}
buffer_cycling <- st_buffer(cyclingpath, dist = 5, nQuadSegs = 30)
```

`nQuadSegs`: number of line segments used to approximate a quarter circle

```{r}
buffer_cycling$AREA <- st_area(buffer_cycling)
```

```{r}
sum(buffer_cycling$AREA)
```

Answer: 1556978 \[m\^2\]

------------------------------------------------------------------------

> **Scenario:**
>
> A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.

1.  Identify pre-schools located inside each Planning Subzone
2.  Calculate number of pre-schools in each Planning Subzone
3.  List the Planning Subzone with most number of pre-school

```{r}
mpsz3414$`PreSch Count` <- lengths(st_intersects(mpsz3414, preschool3414))
```

```{r}
summary(mpsz3414$`PreSch Count`)
```

```{r}
top_n(mpsz3414, 1, `PreSch Count`)
```

-   `top_n(x, n, wt):`

    -   n: top n rows

    -   wt: ordering by variable (optional)

> **Scenario:**
>
> Calculate density of pre-school by planning subzone.

1.  Calculate area of each planning subzone
2.  Compute density

```{r}
mpsz3414$Area <- mpsz3414 %>%
  st_area()
```

```{r}
mpsz3414 <- mpsz3414 %>%
  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)
```

```{r}
hist(mpsz3414$`PreSch Density`)
```

To make it look prettier:

```{r}
ggplot(
  data = mpsz3414,
  aes(x=as.numeric(`PreSch Density`))
) +
  geom_histogram(
    bins = 20,
    color = "black",
    fill = "light blue"
  ) +
  labs(
    title = "Are pre-schools even distributed in Singapore?",
    subtitle = "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools",
    x = "Pre-school Density (per km sq)",
    y = "Frequency"
  )
```

> Relationship between Pre-school Density and Pre-school Count

```{r}
ggplot(data=mpsz3414, 
       aes(y = `PreSch Count`, 
           x= as.numeric(`PreSch Density`)))+
  geom_point(color="black", 
             fill="light blue") +
  xlim(0, 40) +
  ylim(0, 40) +
  labs(title = "",
      x = "Pre-school density (per km sq)",
      y = "Pre-school count")
```
